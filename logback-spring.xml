<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include
            resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="springAppName"
                    source="spring.application.name"/>
    <springProperty scope="context" name="LOGFILENAME"
                    source="spring.application.name" defaultValue="defaultLog"/>
    <appender name="STDOUT"
              class="ch.qos.logback.core.ConsoleAppender">
        <!-- Log message format -->
        <encoder>

            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- The actual AwsLogsAppender (asynchronous mode because of maxFlushTimeMillis > 0) -->
    <appender name="ASYNC_AWS_LOGS" class="ca.pjer.logback.AwsLogsAppender">

        <!-- Send only WARN and above -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>

        <!-- Nice layout pattern -->
        <layout>
            <pattern>%d{yyyyMMdd'T'HHmmss} %thread %level %logger{15} %msg%n</pattern>
        </layout>

        <!-- Hardcoded Log Group Name -->
        <logGroupName>dev-ceil-cw-log-group</logGroupName>

        <!-- Log Stream Name UUID Prefix -->
        <logStreamUuidPrefix>dev-ceil-marking-log-stream/</logStreamUuidPrefix>

        <!-- Hardcoded AWS region -->
        <!-- So even when running inside an AWS instance in us-west-1, logs will go to us-west-2 -->
        <logRegion>eu-west-2</logRegion>

        <!-- Maximum number of events in each batch (50 is the default) -->
        <!-- will flush when the event queue has 50 elements, even if still in quiet time (see maxFlushTimeMillis) -->
        <maxBatchLogEvents>50</maxBatchLogEvents>

        <!-- Maximum quiet time in millisecond (0 is the default) -->
        <!-- will flush when met, even if the batch size is not met (see maxBatchLogEvents) -->
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>

        <!-- Maximum block time in millisecond (5000 is the default) -->
        <!-- when > 0: this is the maximum time the logging thread will wait for the logger, -->
        <!-- when == 0: the logging thread will never wait for the logger, discarding events while the queue is full -->
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>

        <!-- Retention value for log groups, 0 for infinite see -->
        <!-- https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html for other -->
        <!-- possible values -->
        <!--<retentionTimeDays>0</retentionTimeDays>-->

        <!-- Use custom credential instead of DefaultCredentialsProvider -->

    </appender>

    <springProfile name="default | local">
        <property name="LOG_HOME" value="./LOGS/${LOGFILENAME}"/>
        <property name="APP_PROILE" value="default"/>
    </springProfile>
    <springProfile name="dev">
        <property name="LOG_HOME" value="/logs/${LOGFILENAME}/dev"/>
        <property name="APP_PROILE" value="dev"/>
    </springProfile>

    <springProfile name="uat">
        <property name="LOG_HOME" value="/logs/${LOGFILENAME}/uat"/>
        <property name="APP_PROILE" value="uat"/>
    </springProfile>
    <springProfile name="sit">
        <property name="LOG_HOME" value="/logs/${LOGFILENAME}/uat"/>
        <property name="APP_PROILE" value="uat"/>
    </springProfile>
    <springProfile name="prod">
        <property name="LOG_HOME" value="/logs/${LOGFILENAME}/prod"/>
        <property name="APP_PROILE" value="prod"/>
    </springProfile>

    <property name="LOG_FILE_NAME" value="${LOGFILENAME}"/>

    <!-- Setting the root level of logging to INFO -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <springProfile name="dev | sit | uat | preprod | prod">
            <appender-ref ref="ASYNC_AWS_LOGS"/>
        </springProfile>
    </root>
    <logger name="org.springframework" level="INFO"
            additivity="false">
        <appender-ref ref="STDOUT"/>
        <springProfile name="dev | sit | uat | preprod | prod">
            <appender-ref ref="ASYNC_AWS_LOGS"/>
        </springProfile>
    </logger>
    <logger name="org.apache.camel" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <springProfile name="dev | sit | uat | preprod | prod">
            <appender-ref ref="ASYNC_AWS_LOGS"/>
        </springProfile>
    </logger>
    <logger name="org.ca" level="DEBUG" additivity="false">
        <appender-ref ref="STDOUT"/>
        <springProfile name="dev | sit | uat | preprod | prod">
            <appender-ref ref="ASYNC_AWS_LOGS"/>
        </springProfile>
        <!--<appender-ref ref="FILE-AUDIT" />-->
    </logger>
</configuration>